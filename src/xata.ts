// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "employer",
    columns: [
      { name: "name", type: "string" },
      { name: "address", type: "string" },
      { name: "NIC", type: "string" },
      { name: "hashed_password", type: "string" },
      { name: "phone_number", type: "string" },
      { name: "email", type: "email", unique: true },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Employer = InferredTypes["employer"];
export type EmployerRecord = Employer & XataRecord;

export type DatabaseSchema = {
  employer: EmployerRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://L-A-S-S-Kularathna-s-workspace-q8ee0j.us-east-1.xata.sh/db/handy-hero",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
